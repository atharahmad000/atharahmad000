import pandas as pd
import numpy as np
from tpot import TPOTRegressor
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_absolute_error, mean_squared_error

# Load the dataset
url = "https://raw.githubusercontent.com/ageron/handson-ml/master/datasets/housing/housing.csv"
df = pd.read_csv(url)

# Handle missing values
df.dropna(inplace=True)

# Convert categorical feature (ocean_proximity) into numerical using one-hot encoding
df = pd.get_dummies(df, columns=["ocean_proximity"], drop_first=True)

# Define features (X) and target variable (y)
X = df.drop(columns=["median_house_value"])
y = df["median_house_value"]

# Split dataset into training and test sets (80-20 split)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize TPOT AutoML model
tpot = TPOTRegressor(generations=5, population_size=50, verbosity=2, random_state=42)

# Train the model
tpot.fit(X_train, y_train)

# Make predictions
y_pred = tpot.predict(X_test)

# Evaluate model performance
mae = mean_absolute_error(y_test, y_pred)
rmse = np.sqrt(mean_squared_error(y_test, y_pred))

print(f"Mean Absolute Error (MAE): {mae:.2f}")
print(f"Root Mean Squared Error (RMSE): {rmse:.2f}")

# Export the best model pipeline
tpot.export("best_housing_pipeline.py")
print("Best model pipeline has been saved to 'best_housing_pipeline.py'.")
